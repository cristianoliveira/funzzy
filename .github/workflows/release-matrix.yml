name: Release (multi-arch)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

          # NOTE: Windows are not supported.
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          # - os: windows-latest
          #   target: aarch64-pc-windows-msvc

    env:
      TARGET: ${{ matrix.target }}
      RELEASE_TAG: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Linux deps (aarch64 cross)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Set up Windows GNU tools (if needed)
        if: startsWith(matrix.os, 'windows-')
        run: echo "Windows MSVC toolchain preinstalled"

      - name: Build and package
        shell: bash
        run: |
          set -euxo pipefail
          rustup target add "$TARGET"
          cargo build --release --target "$TARGET"
          mkdir -p pkg
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp target/$TARGET/release/funzzy.exe pkg/
            cp target/$TARGET/release/fzz.exe pkg/
            7z a "funzzy-${RELEASE_TAG}-${TARGET}.zip" pkg
            echo "ARTIFACT=funzzy-${RELEASE_TAG}-${TARGET}.zip" >> $GITHUB_ENV
          else
            cp target/$TARGET/release/funzzy pkg/
            cp target/$TARGET/release/fzz pkg/
            tar czf "funzzy-${RELEASE_TAG}-${TARGET}.tar.gz" pkg
            echo "ARTIFACT=funzzy-${RELEASE_TAG}-${TARGET}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ARTIFACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
